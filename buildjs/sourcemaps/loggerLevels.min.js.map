{"version":3,"sources":["loggerLevels.min.js"],"names":["LoggerLevels","this","defaultName","INFO","VERBOSE","Object","defineProperty","prototype","get","enumerable","configurable","value","name","getNameValuePair","id","result","DEFAULT_NAME","DEFAULT","toString","property","Enum","hasOwnProperty","toUpperCase"],"mappings":"AAAA,YACA,IAAIA,cAAgB,WAChB,QAASA,KACLC,KAAAA,WAAe,EACfA,KAAKC,YAAc,OACnBD,KAAAA,SACIE,KAAM,EACNC,QAAS,GAoEjB,MAjEAC,QAAOC,eAAeN,EAAaO,UAAW,WAI1CC,IAAK,WACD,MAAOP,MAAAA,YAEXQ,YAAY,EACZC,cAAc,IAElBL,OAAOC,eAAeN,EAAaO,UAAW,gBAI1CC,IAAK,WACD,MAAOP,MAAKC,aAEhBO,YAAY,EACZC,cAAc,IAElBL,OAAOC,eAAeN,EAAaO,UAAW,QAC1CC,IAAK,WACD,MAAOP,MAAAA,SAEXQ,YAAY,EACZC,cAAc,IAMlBV,EAAaO,UAAUI,MAAQ,SAAUC,GACrC,MAAOX,MAAKY,iBAAiBD,GAAMD,OAMvCX,EAAaO,UAAUK,KAAO,SAAUD,GACpC,MAAOV,MAAKY,iBAAiBF,GAAOC,MAOxCZ,EAAaO,UAAUM,iBAAmB,SAAUC,GAEhD,GAAIC,IAAWH,KAAMX,KAAKe,aAAcL,MAAOV,KAAKgB,QACpD,IAAoB,gBAAT,IAAqC,gBAAT,GAEnC,MAAOF,EAEXD,GAAKA,EAAGI,UACR,KAAK,GAAIC,KAAYlB,MAAKmB,KAClBnB,KAAKmB,KAAKC,eAAeF,KACrBL,EAAGQ,gBAAkBH,EAASG,eAC3BR,GAAMb,KAAKmB,KAAKD,KACnBJ,EAAOH,KAAOO,EACdJ,EAAOJ,MAAQV,KAAKmB,KAAKD,IAIrC,OAAOJ,IAEJf","file":"loggerLevels.min.js","sourcesContent":["'use-strict';\nvar LoggerLevels = (function () {\n    function LoggerLevels() {\n        this.default = 0;\n        this.defaultName = 'INFO';\n        this.enum = {\n            INFO: 0,\n            VERBOSE: 1,\n        };\n    }\n    Object.defineProperty(LoggerLevels.prototype, \"DEFAULT\", {\n        /**\n         * Default enum value.\n         */\n        get: function () {\n            return this.default;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoggerLevels.prototype, \"DEFAULT_NAME\", {\n        /**\n         * Default enum name.\n         */\n        get: function () {\n            return this.defaultName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoggerLevels.prototype, \"Enum\", {\n        get: function () {\n            return this.enum;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the value of the specified enum name.\n     * @param {string} name\n     */\n    LoggerLevels.prototype.value = function (name) {\n        return this.getNameValuePair(name).value;\n    };\n    /**\n     * Returns the name of the specified enum value.\n     * @param {number} value\n     */\n    LoggerLevels.prototype.name = function (value) {\n        return this.getNameValuePair(value).name;\n    };\n    /**\n     * Returns a specific name and vlaue based on the name or value.\n     * Note: id can be the name or value of the enumeration item.\n     * @param {string|number} id\n     */\n    LoggerLevels.prototype.getNameValuePair = function (id) {\n        // TODO: Algorithmically set the default somehwere else.\n        var result = { name: this.DEFAULT_NAME, value: this.DEFAULT };\n        if (typeof (id) !== 'string' && typeof (id) !== 'number') {\n            // TODO: Log error?\n            return result;\n        }\n        id = id.toString();\n        for (var property in this.Enum) {\n            if (this.Enum.hasOwnProperty(property)) {\n                if (id.toUpperCase() === property.toUpperCase()\n                    || id == this.Enum[property]) {\n                    result.name = property;\n                    result.value = this.Enum[property];\n                }\n            }\n        }\n        return result;\n    };\n    return LoggerLevels;\n}());\n"],"sourceRoot":"/source/"}